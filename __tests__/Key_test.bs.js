// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var Key$BsMusicTheory = require("../src/Key.bs.js");
var Accidental$BsMusicTheory = require("../src/Accidental.bs.js");

Jest.testAll("make with string literal", /* :: */[
      /* tuple */[
        Key$BsMusicTheory.makeWithString("a##b"),
        /* record */[
          /* type_ : A */5,
          /* accidental : Sharps */Block.__(1, [1])
        ]
      ],
      /* :: */[
        /* tuple */[
          Key$BsMusicTheory.makeWithString("a#"),
          /* record */[
            /* type_ : A */5,
            /* accidental : Sharps */Block.__(1, [1])
          ]
        ],
        /* [] */0
      ]
    ], (function (param) {
        return Jest.Expect[/* toEqual */12](param[1], Jest.Expect[/* expect */0](param[0]));
      }));

Jest.testAll("equality", /* :: */[
      /* record */[
        /* type_ : C */0,
        /* accidental */Accidental$BsMusicTheory.flat
      ],
      /* :: */[
        /* record */[
          /* type_ : C */0,
          /* accidental : Sharps */Block.__(1, [23])
        ],
        /* :: */[
          /* record */[
            /* type_ : C */0,
            /* accidental : Flats */Block.__(0, [13])
          ],
          /* :: */[
            /* record */[
              /* type_ : C */0,
              /* accidental : Flats */Block.__(0, [25])
            ],
            /* [] */0
          ]
        ]
      ]
    ], (function (actual) {
        var match = Key$BsMusicTheory.equals(/* record */[
              /* type_ : B */6,
              /* accidental : Natural */0
            ], actual);
        if (match) {
          return Jest.pass;
        } else {
          return Jest.fail("");
        }
      }));

/*  Not a pure module */
